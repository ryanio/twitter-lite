{"version":3,"file":"stream.umd.js","sources":["../stream.js"],"sourcesContent":["const EventEmitter = require('events');\nconst END = '\\r\\n';\nconst END_LENGTH = 2;\n\nclass Stream extends EventEmitter {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n\n  parse(buffer) {\n    this.buffer += buffer.toString('utf8');\n    let index;\n    let json;\n\n    while ((index = this.buffer.indexOf(END)) > -1) {\n      json = this.buffer.slice(0, index);\n      this.buffer = this.buffer.slice(index + END_LENGTH);\n      if (json.length > 0) {\n        try {\n          json = JSON.parse(json);\n          this.emit(json.event || 'data', json);\n        } catch (error) {\n          error.source = json;\n          this.emit('error', error);\n        }\n      } else {\n        this.emit('ping');\n      }\n    }\n  }\n}\n\nmodule.exports = Stream;\n"],"names":["EventEmitter","require","module","exports","_this","buffer","parse","index","json","this","toString","indexOf","slice","length","JSON","emit","event","error","source"],"mappings":"yKAAA,IAAMA,EAAeC,QAAQ,UAiC7BC,OAAOC,4BA5BL,mBAAc,OACZC,sBACKC,OAAS,wGAGhBC,MAAA,SAAMD,GAEJ,IAAIE,EACAC,EAEJ,IAJAC,KAAKJ,QAAUA,EAAOK,SAAS,SAIvBH,EAAQE,KAAKJ,OAAOM,QAdpB,UAcqC,GAG3C,GAFAH,EAAOC,KAAKJ,OAAOO,MAAM,EAAGL,GAC5BE,KAAKJ,OAASI,KAAKJ,OAAOO,MAAML,EAfnB,GAgBTC,EAAKK,OAAS,EAChB,IACEL,EAAOM,KAAKR,MAAME,GAClBC,KAAKM,KAAKP,EAAKQ,OAAS,OAAQR,GAChC,MAAOS,GACPA,EAAMC,OAASV,EACfC,KAAKM,KAAK,QAASE,QAGrBR,KAAKM,KAAK,YAvBGf"}